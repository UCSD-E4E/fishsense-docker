name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 1 * *' # At 00:00 on the first day of every month'

jobs:
  build:
    strategy:
      matrix:
        docker: 
          - {image: ubuntu, image_tag: 24.04, push_tag: cpu, platforms: 'linux/amd64,linux/arm64', runs-on: ubuntu-24.04, user: ubuntu}
          - {image: rayproject/ray, image_tag: 2.46.0.0e19ea-py312-aarch64, push_tag: ray-aarch64-cpu, platforms: 'linux/arm64', runs-on: ubuntu-24.04-arm, user: ray}
          - {image: nvidia/cuda, image_tag: 12.6.3-cudnn-devel-ubuntu24.04, push_tag: cuda, platforms: linux/amd64, runs-on: ubuntu-24.04, user: ubuntu}
    

    runs-on: ${{ matrix.docker.runs-on }}
    
    steps:
    - name: Docker/ENV cleanup Cleanup
      run: |
        docker image prune -a -f
        docker container prune -f
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - 
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Generate Dockerfile
      run: |
        python -m fishsense_docker --image ${{ matrix.docker.image }}:${{ matrix.docker.image_tag }} --user ${{ matrix.docker.user }} --output Dockerfile
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        tags: ghcr.io/ucsd-e4e/fishsense:${{ matrix.docker.push_tag }}
        platforms: ${{ matrix.docker.platforms }}
        push: true
